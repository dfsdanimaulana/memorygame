{"version":3,"sources":["components/SingleCards/SingleCards.js","components/Level/Level.js","components/Profile/Profile.js","hooks/useFetch.js","components/Modal/Modal.js","components/Login/Login.js","components/ScoreBoard/ScoreBoard.js","App.js","index.js"],"names":["SingleCards","_ref","card","handleChoice","flipped","disabled","_jsx","className","children","_jsxs","src","alt","process","onClick","Level","Profile","user","gamePoint","id","concat","avatar","username","point","type","name","max","defaultValue","useFetch","url","trigger","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","isPending","setIsPending","_useState5","_useState6","error","setError","useEffect","controller","AbortController","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","signal","sent","t0","console","log","stop","apply","arguments","abort","Modal","handleModal","twiceName","Login","updateUser","password","check_password","register","setRegister","_useState7","_useState8","handleChange","e","_e$target","target","value","prevState","_objectSpread","_defineProperty","handleSubmit","_ref2","targetUrl","_error$response","_error$response$data","preventDefault","includes","abrupt","post","response","message","_x","onSubmit","onChange","autoComplete","autoFocus","placeholder","required","ScoreBoard","users","topTurn","topTime","setPoint","time","setTime","turn","setTurn","map","index","_id","cardImages","matched","BASE_URL","App","timer","setTimer","cards","setCards","turns","setTurns","setTrigger","_useState9","_useState10","setDisabled","_useState11","_useState12","choiceOne","setChoiceOne","_useState13","_useState14","choiceTwo","setChoiceTwo","_useState15","_useState16","setGamePoint","_useState17","_useState18","isLogged","setIsLogged","_useState19","_useState20","timeOut","setTimeOut","_useState21","_useState22","showModal","setShowModal","_useState23","_useState24","setUser","_useState25","_useState26","gameDone","setGameDone","_useState27","_useState28","showBoard","setShowBoard","intervalTimer","useRef","shuffleCards","length","filter","timeStop","updateUserPoint","prevCards","resetTurn","setTimeout","shuffeledCards","sort","Math","random","timeStart","current","clearInterval","setInterval","prevTimer","prevTurn","newPoint","prevUser","newUser","handleLogged","_Fragment","href","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ee0fcc.chunk.js","sourcesContent":["import './SingleCards.css'\r\n\r\nexport default function SingleCards({ card, handleChoice, flipped, disabled }) {\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? 'flipped' : ''}>\r\n                <img src={card.src} alt=\"front\" className=\"front\" />\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/cover.jpg'}\r\n                    onClick={handleClick}\r\n                    alt=\"back\"\r\n                    className=\"back\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './Level.css'\r\n\r\nexport default function Level() {\r\n    return (\r\n        <div className=\"level-grid\">\r\n            <div className=\"level-card\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/cover.jpg'}\r\n                    alt=\"level\"\r\n                />\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/locked.png'}\r\n                    alt=\"locked\"\r\n                    className=\"locked\"\r\n                />\r\n                <h5>Level 1</h5>\r\n            </div>\r\n            <div className=\"level-card\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/cover.jpg'}\r\n                    alt=\"level\"\r\n                />\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/locked.png'}\r\n                    alt=\"locked\"\r\n                    className=\"locked\"\r\n                />\r\n                <h5>Level 2</h5>\r\n            </div>\r\n            <div className=\"level-card\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/cover.jpg'}\r\n                    alt=\"level\"\r\n                />\r\n                <img\r\n                    src={process.env.PUBLIC_URL + '/img/locked.png'}\r\n                    alt=\"locked\"\r\n                    className=\"locked\"\r\n                />\r\n                <h5>Level 3</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './Profile.css'\r\n\r\nexport default function Profile({ user, gamePoint }) {\r\n    return (\r\n        <div id=\"profile-card\">\r\n            <img src={`/avatar/${user?.avatar}`} alt=\"avatar\" />\r\n            <div className=\"username\">\r\n                <div>{user?.username}</div>\r\n                <div className=\"level\">1</div>\r\n            </div>\r\n            <div className=\"point\">\r\n                <label>\r\n                    point :\r\n                    <span>\r\n                        {user?.point} {gamePoint}\r\n                    </span>\r\n                </label>\r\n                <input\r\n                    type=\"range\"\r\n                    name=\"point\"\r\n                    id=\"point\"\r\n                    max=\"10000\"\r\n                    disabled\r\n                    defaultValue={user?.point}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useFetch = (url, trigger) => {\r\n    const [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController()\r\n\r\n        const fetchData = async () => {\r\n            setIsPending(true)\r\n\r\n            try {\r\n                const res = await axios.get(url, { signal: controller.signal })\r\n                setIsPending(false)\r\n                setData(res.data)\r\n                setError(null)\r\n            } catch (err) {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('the fetch was aborted')\r\n                } else {\r\n                    setIsPending(false)\r\n                    setError('Could not fetch the data')\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData()\r\n\r\n        return () => {\r\n            controller.abort()\r\n        }\r\n    }, [url, trigger])\r\n\r\n    return { data, isPending, error }\r\n}\r\n","import './Modal.css'\r\n\r\nexport default function Modal({ children, handleModal }) {\r\n    return (\r\n        <div className=\"modal-backdrop\">\r\n            <div className=\"modal\">\r\n                <button className=\"close-modal\" onClick={handleModal}>\r\n                    x\r\n                </button>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport './Login.css'\r\n\r\nconst twiceName = [\r\n    'mina',\r\n    'sana',\r\n    'jihyo',\r\n    'momo',\r\n    'tzuyu',\r\n    'dahyun',\r\n    'nayeon',\r\n    'jeongyeon',\r\n    'chaeyoung',\r\n    'twice',\r\n    'once',\r\n    'teudoongie',\r\n]\r\n\r\nexport default function Login({ url, updateUser }) {\r\n    const [data, setData] = useState({\r\n        username: '',\r\n        password: '',\r\n        check_password: '',\r\n    })\r\n    const [register, setRegister] = useState(false)\r\n\r\n    const [isPending, setIsPending] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleChange = (e) => {\r\n        setError(false)\r\n        const { id, value } = e.target\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [id]: value,\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (twiceName.includes(data.username)) {\r\n            setError(\"please don't use twice name 😊\")\r\n            return\r\n        }\r\n        if (register) {\r\n            if (data.password !== data.check_password) {\r\n                setError('wrong check password')\r\n                return\r\n            }\r\n        }\r\n        setIsPending(true)\r\n\r\n        const targetUrl = register ? `${url}/user` : `${url}/user/login`\r\n\r\n        try {\r\n            const res = await axios.post(targetUrl, data)\r\n            setIsPending(false)\r\n            updateUser(res.data)\r\n            setRegister(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setIsPending(false)\r\n            setError(error?.response?.data?.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"form-container\">\r\n            {register ? <h3>Register</h3> : <h3>Log in</h3>}\r\n            {isPending && <p className=\"form-error\">Loading...</p>}\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <input\r\n                    id=\"username\"\r\n                    className=\"login-input\"\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"username\"\r\n                    required\r\n                />\r\n                <input\r\n                    id=\"password\"\r\n                    className=\"login-input\"\r\n                    type=\"password\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"password\"\r\n                    required\r\n                />\r\n\r\n                {register && (\r\n                    <input\r\n                        id=\"check_password\"\r\n                        className=\"login-input\"\r\n                        onChange={handleChange}\r\n                        type=\"password\"\r\n                        placeholder=\"check password\"\r\n                        required\r\n                    />\r\n                )}\r\n                <button className=\"log login-button\" type=\"submit\">\r\n                    Submit\r\n                </button>\r\n                {register ? (\r\n                    <div className=\"other\">\r\n                        have account ? login\r\n                        <span onClick={() => setRegister(false)}> here</span>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"other\">\r\n                        new user ? create account\r\n                        <span onClick={() => setRegister(true)}> here</span>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport './ScoreBoard.css'\r\n\r\nexport default function ScoreBoard({ users, topTurn, topTime }) {\r\n    const [point, setPoint] = useState(true)\r\n    const [time, setTime] = useState(false)\r\n    const [turn, setTurn] = useState(false)\r\n\r\n    return (\r\n        <div id=\"board-container\">\r\n            <div className=\"button-group\">\r\n                <button\r\n                    onClick={() => {\r\n                        setPoint(true)\r\n                        setTime(false)\r\n                        setTurn(false)\r\n                    }}>\r\n                    Top Player\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        setPoint(false)\r\n                        setTime(true)\r\n                        setTurn(false)\r\n                    }}>\r\n                    Time Records\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        setPoint(false)\r\n                        setTime(false)\r\n                        setTurn(true)\r\n                    }}>\r\n                    Turn Records\r\n                </button>\r\n            </div>\r\n\r\n            {point && (\r\n                <div className=\"board-list\">\r\n                    <ul>\r\n                        {users &&\r\n                            users.map((user, index) => (\r\n                                <li className=\"data-list\" key={user._id}>\r\n                                    <span> {index + 1} </span>\r\n                                    <span> {user.username} </span>\r\n                                    <span> {user.point} pts </span>\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {time && (\r\n                <div className=\"board-list\">\r\n                    <ul>\r\n                        {topTime &&\r\n                            topTime.map((user, index) => (\r\n                                <li className=\"data-list\" key={user._id}>\r\n                                    <span> {index + 1} </span>\r\n                                    <span> {user.username} </span>\r\n                                    <span> {user.time}s </span>\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {turn && (\r\n                <div className=\"board-list\">\r\n                    <ul>\r\n                        {topTurn &&\r\n                            topTurn.map((user, index) => (\r\n                                <li className=\"data-list\" key={user._id}>\r\n                                    <span> {index + 1} </span>\r\n                                    <span> {user.username} </span>\r\n                                    <span> {user.turn} turns </span>\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css'\r\n\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport SingleCards from './components/SingleCards/SingleCards'\r\nimport Level from './components/Level/Level'\r\nimport Profile from './components/Profile/Profile'\r\nimport { useFetch } from './hooks/useFetch'\r\nimport axios from 'axios'\r\nimport Modal from './components/Modal/Modal'\r\nimport Login from './components/Login/Login'\r\nimport ScoreBoard from './components/ScoreBoard/ScoreBoard'\r\n\r\nconst cardImages = [\r\n    { src: process.env.PUBLIC_URL + '/img/chaeyoung.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/dahyun.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/jeongyon.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/jihyo.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/mina.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/momo.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/nayeon.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/sana.jpeg', matched: false },\r\n    { src: process.env.PUBLIC_URL + '/img/tzuyu.jpeg', matched: false },\r\n]\r\n\r\nconst BASE_URL = 'http://localhost:3003'\r\n\r\nfunction App() {\r\n    const [timer, setTimer] = useState(60)\r\n    const [cards, setCards] = useState([])\r\n    const [turns, setTurns] = useState(0)\r\n    const [trigger, setTrigger] = useState({})\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [choiceOne, setChoiceOne] = useState(null)\r\n    const [choiceTwo, setChoiceTwo] = useState(null)\r\n    const [gamePoint, setGamePoint] = useState('')\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [timeOut, setTimeOut] = useState(false)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [user, setUser] = useState(null)\r\n    const [gameDone, setGameDone] = useState(false)\r\n    const [showBoard, setShowBoard] = useState(false)\r\n\r\n    const intervalTimer = useRef(null)\r\n\r\n    // fetch user data\r\n    const { data: users } = useFetch(`${BASE_URL}/user/point`, trigger)\r\n    const { data: topTime } = useFetch(`${BASE_URL}/user/time`, trigger)\r\n    const { data: topTurn } = useFetch(`${BASE_URL}/user/turn`, trigger)\r\n\r\n    // start game automaticly\r\n    useEffect(() => shuffleCards(), [])\r\n\r\n    // compare two cards\r\n    useEffect(() => {\r\n        // game finished if all matched\r\n        if (\r\n            cards.length !== 0 &&\r\n            cards.filter((card) => card.matched === false).length < 1\r\n        ) {\r\n            // stop count here\r\n            timeStop()\r\n            updateUserPoint()\r\n            setGameDone(true)\r\n        }\r\n        if (choiceOne && choiceTwo) {\r\n            setDisabled(true)\r\n            if (choiceOne.src === choiceTwo.src) {\r\n                setCards((prevCards) => {\r\n                    return prevCards.map((card) => {\r\n                        if (card.src === choiceOne.src) {\r\n                            return { ...card, matched: true }\r\n                        } else {\r\n                            return card\r\n                        }\r\n                    })\r\n                })\r\n                resetTurn()\r\n            } else {\r\n                setTimeout(() => resetTurn(), 1000)\r\n            }\r\n        }\r\n    }, [choiceOne, choiceTwo])\r\n\r\n    // time out handler\r\n    useEffect(() => {\r\n        if (timer < 1) {\r\n            timeStop()\r\n            setTimeOut(true)\r\n            setDisabled(true)\r\n        }\r\n    }, [timer])\r\n\r\n    // shuffle cards\r\n    const shuffleCards = () => {\r\n        const shuffeledCards = [...cardImages, ...cardImages]\r\n            .sort(() => Math.random() - 0.5)\r\n            .map((card) => ({ ...card, id: Math.random() }))\r\n\r\n        setDisabled(false)\r\n        setGameDone(false)\r\n        timeStop()\r\n        setTimer(60)\r\n        setTimeOut(false)\r\n        setChoiceOne(null)\r\n        setChoiceTwo(null)\r\n        setCards(shuffeledCards)\r\n        setTurns(0)\r\n    }\r\n\r\n    // handle user choice\r\n    const handleChoice = (card) => {\r\n        // start timer\r\n        if (timer === 60) {\r\n            timeStart()\r\n        }\r\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\r\n    }\r\n\r\n    // start time counter\r\n    const timeStart = () => {\r\n        if (intervalTimer.current) clearInterval(intervalTimer.current)\r\n        intervalTimer.current = setInterval(() => {\r\n            setTimer((prevTimer) => prevTimer - 1)\r\n        }, 1000)\r\n    }\r\n\r\n    // stop time counter\r\n    const timeStop = () => {\r\n        clearInterval(intervalTimer.current)\r\n    }\r\n\r\n    // reset choices and increase turn\r\n    const resetTurn = () => {\r\n        setDisabled(false)\r\n        setChoiceOne(null)\r\n        setChoiceTwo(null)\r\n        setTurns((prevTurn) => prevTurn + 1)\r\n    }\r\n\r\n    // update user point\r\n    const updateUserPoint = () => {\r\n        // calculate the point\r\n        const point = 100 - turns - timer\r\n        setGamePoint(`+ ${point}`)\r\n\r\n        const data = {\r\n            username: user?.username,\r\n            newPoint: point,\r\n            time: 60 - timer,\r\n            turn: turns,\r\n        }\r\n\r\n        try {\r\n            setTimeout(async () => {\r\n                const res = await axios.post(`${BASE_URL}/user/point`, data)\r\n                setGamePoint('')\r\n                setTrigger(res)\r\n                setUser((prevUser) => {\r\n                    const newUser = { ...prevUser }\r\n                    return { ...newUser, point: prevUser.point + point }\r\n                })\r\n            }, 2000)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // hanle log user\r\n    const handleLogged = () => {\r\n        if (isLogged) {\r\n            // if logged in show logout modal\r\n            setShowModal(true)\r\n        } else {\r\n            // if not logged in show login modal\r\n            setShowModal(true)\r\n        }\r\n    }\r\n\r\n    // function to close modal\r\n    const handleModal = () => {\r\n        if (showBoard) {\r\n            setShowBoard(false)\r\n        } else {\r\n            setShowModal(!showModal)\r\n        }\r\n    }\r\n\r\n    // set logged user\r\n    const updateUser = (data) => {\r\n        setUser(data)\r\n        setIsLogged(true)\r\n        handleModal()\r\n    }\r\n\r\n    // handle log out user\r\n    const handleLogOut = () => {\r\n        setUser(null)\r\n        setIsLogged(false)\r\n        handleModal()\r\n        shuffleCards()\r\n    }\r\n\r\n    // open board\r\n    const handleBoard = () => {\r\n        setShowBoard(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {showModal && (\r\n                <Modal handleModal={handleModal}>\r\n                    {isLogged ? (\r\n                        <>\r\n                            <div>are you sure?</div>\r\n                            <button\r\n                                onClick={handleLogOut}\r\n                                className=\"log login-button\">\r\n                                log out\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <Login url={BASE_URL} updateUser={updateUser} />\r\n                    )}\r\n                </Modal>\r\n            )}\r\n            {showBoard && (\r\n                <Modal handleModal={handleModal}>\r\n                    <ScoreBoard\r\n                        users={users}\r\n                        topTime={topTime}\r\n                        topTurn={topTurn}\r\n                    />\r\n                </Modal>\r\n            )}\r\n            <div className=\"board-button\">\r\n                <button className=\"log\" onClick={handleBoard}>\r\n                    Scoreboard\r\n                </button>\r\n            </div>\r\n            <div className=\"log-user\">\r\n                {isLogged ? (\r\n                    <button className=\"log\" onClick={handleLogged}>\r\n                        Log out\r\n                    </button>\r\n                ) : (\r\n                    <button className=\"log\" onClick={handleLogged}>\r\n                        Log in\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <h1>Twice Memory Game</h1>\r\n            {!isLogged && <h5>Log in to save your game progress</h5>}\r\n            {isLogged && (\r\n                <div className=\"progress\">\r\n                    {user && <Profile user={user} gamePoint={gamePoint} />}\r\n                    <div className=\"count\">\r\n                        <div>Turns: {turns}</div>\r\n                        {timeOut ? (\r\n                            <div>Time Out!</div>\r\n                        ) : (\r\n                            <div>Timer: {timer}s</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <button onClick={shuffleCards} className=\"main-button\">\r\n                new game\r\n            </button>\r\n            {gameDone && (\r\n                <p>{`game finish with ${turns} turns in ${\r\n                    60 - timer\r\n                } second`}</p>\r\n            )}\r\n\r\n            <div className=\"card-grid\">\r\n                {cards.map((card) => (\r\n                    <SingleCards\r\n                        card={card}\r\n                        key={card.id}\r\n                        handleChoice={handleChoice}\r\n                        flipped={\r\n                            card === choiceOne ||\r\n                            card === choiceTwo ||\r\n                            card.matched\r\n                        }\r\n                        disabled={disabled}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <Level />\r\n            <footer>\r\n                <p>Copyright © 2021</p>\r\n                <p>\r\n                    Contact me\r\n                    <a href=\"https://Instagram.com/dnm17_\">@dnm17_</a>\r\n                </p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}